{"version":3,"sources":["js/index.js"],"names":["lengthEl","document","querySelector","options","querySelectorAll","generateBtn","passwordEl","labelEl","passwordForm","generateRandomSymbol","type","String","fromCharCode","Math","floor","random","symbols","length","getRandomType","types","generatePassword","value","password","forEach","option","checked","push","name","i","addEventListener"],"mappings":";AAAA,IAAMA,EAAWC,SAASC,cAAc,WAClCC,EAAUF,SAASG,iBAAiB,wBACpCC,EAAcJ,SAASC,cAAc,aACrCI,EAAaL,SAASC,cAAc,aACpCK,EAAUN,SAASC,cAAc,UACjCM,EAAeP,SAASC,cAAc,SAE5C,SAASO,EAAqBC,GACpBA,OAAAA,GACD,IAAA,YACIC,OAAAA,OAAOC,aAAaC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAEzD,IAAA,YACIJ,OAAAA,OAAOC,aAAaC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAEzD,IAAA,SACIJ,OAAAA,OAAOC,aAAaC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAEzD,IAAA,SACGC,IAAAA,EAAN,iCACOA,OAAAA,EAAQH,KAAKC,MAAMD,KAAKE,SAAWC,EAAQC,SAGpD,QACS,MAAA,IAIb,SAASC,EAAcC,GACdA,OAAAA,EAAMN,KAAKC,MAAMD,KAAKE,SAAWI,EAAMF,SAGhD,SAASG,IACDH,IAAAA,EAASjB,EAASqB,MAClBF,EAAQ,GACVG,EAAW,GAIX,GAFJnB,EAAQoB,QAAQ,SAAAC,GAAWA,OAAAA,EAAOC,QAAUN,EAAMO,KAAKF,EAAOG,MAAQ,OAEjER,EAAMF,OAAP,CAIC,IAAA,IAAIW,EAAI,EAAGA,EAAIX,EAAQW,IAC1BN,GAAYb,EAAqBS,EAAcC,IAGjDb,EAAWe,MAAQC,GAGrBjB,EAAYwB,iBAAiB,QAAST","file":"js.4945c23b.js","sourceRoot":"..","sourcesContent":["const lengthEl = document.querySelector('#length');\r\nconst options = document.querySelectorAll('.generator__checkbox');\r\nconst generateBtn = document.querySelector('#generate');\r\nconst passwordEl = document.querySelector('#password');\r\nconst labelEl = document.querySelector('#label');\r\nconst passwordForm = document.querySelector('#form');\r\n\r\nfunction generateRandomSymbol(type) {\r\n  switch (type) {\r\n    case 'lowercase':\r\n      return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\r\n\r\n    case 'uppercase':\r\n      return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n\r\n    case 'number':\r\n      return String.fromCharCode(Math.floor(Math.random() * 10) + 48);\r\n\r\n    case 'symbol': {\r\n      const symbols = `~!@#$%^&*()_+={}[]|:;\"'<,>.?/`;\r\n      return symbols[Math.floor(Math.random() * symbols.length)];\r\n    }\r\n\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nfunction getRandomType(types) {\r\n  return types[Math.floor(Math.random() * types.length)];\r\n}\r\n\r\nfunction generatePassword() {\r\n  const length = lengthEl.value;\r\n  const types = [];\r\n  let password = '';\r\n\r\n  options.forEach(option => (option.checked ? types.push(option.name) : null));\r\n\r\n  if (!types.length) {\r\n    return;\r\n  }\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    password += generateRandomSymbol(getRandomType(types));\r\n  }\r\n\r\n  passwordEl.value = password;\r\n}\r\n\r\ngenerateBtn.addEventListener('click', generatePassword);\r\n"]}