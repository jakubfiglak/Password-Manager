{"version":3,"sources":["js/index.js"],"names":["signupInputs","document","querySelectorAll","clearPrevState","input","classList","contains","closest","querySelector","remove","displayError","message","field","errorMsg","innerText","add","displaySuccess","validateInput","validity","valid","valueMissing","typeMismatch","tooShort","patternMismatch","name","minLength","title","forEach","addEventListener"],"mappings":";AAAA,IAAMA,EAAeC,SAASC,iBAAiB,kBAE/C,SAASC,EAAeC,GAClBA,EAAMC,UAAUC,SAAS,2BACbF,EAAMG,QAAQ,kBACLC,cAAc,kBAC5BH,UAAUI,OAAO,yBAC1BL,EAAMC,UAAUI,OAAO,2BACdL,EAAMC,UAAUC,SAAS,yBAClCF,EAAMC,UAAUI,OAAO,wBAI3B,SAASC,EAAaN,EAAOO,GACrBC,IACAC,EADQT,EAAMG,QAAQ,kBACLC,cAAc,kBACrCK,EAASC,UAAeH,GAAAA,OAAAA,GACxBE,EAASR,UAAUU,IAAI,yBACvBX,EAAMC,UAAUU,IAAI,0BAGtB,SAASC,EAAeZ,GACtBA,EAAMC,UAAUU,IAAI,wBAGtB,SAASE,IACPd,EAAe,MAQX,IAAA,EAAA,KAAKe,SALPC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,aACAC,EAAAA,EAAAA,aACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,gBAGEJ,EACFH,EAAe,OAEXI,GACFV,EAAa,KAAM,0BAEjBW,GACFX,EAAa,KAAM,+BAEjBY,GACFZ,EACE,KACG,GAAA,OAAA,KAAKc,KAA2B,wBAAA,OAAA,KAAKC,UAF1C,gBAKEF,GACFb,EAAa,KAAS,GAAA,OAAA,KAAKc,KAAgC,6BAAA,OAAA,KAAKE,SAKtE1B,EAAa2B,QAAQ,SAAAvB,GACnBA,EAAMwB,iBAAiB,UAAWX,GAClCb,EAAMwB,iBAAiB,OAAQX","file":"js.7047a6e1.js","sourceRoot":"..","sourcesContent":["const signupInputs = document.querySelectorAll('.signup__input');\r\n\r\nfunction clearPrevState(input) {\r\n  if (input.classList.contains('signup__input--invalid')) {\r\n    const field = input.closest('.signup__field');\r\n    const errorMsg = field.querySelector('.signup__error');\r\n    errorMsg.classList.remove('signup__error--active');\r\n    input.classList.remove('signup__input--invalid');\r\n  } else if (input.classList.contains('signup__input--valid')) {\r\n    input.classList.remove('signup__input--valid');\r\n  }\r\n}\r\n\r\nfunction displayError(input, message) {\r\n  const field = input.closest('.signup__field');\r\n  const errorMsg = field.querySelector('.signup__error');\r\n  errorMsg.innerText = `${message}`;\r\n  errorMsg.classList.add('signup__error--active');\r\n  input.classList.add('signup__input--invalid');\r\n}\r\n\r\nfunction displaySuccess(input) {\r\n  input.classList.add('signup__input--valid');\r\n}\r\n\r\nfunction validateInput() {\r\n  clearPrevState(this);\r\n\r\n  const {\r\n    valid,\r\n    valueMissing,\r\n    typeMismatch,\r\n    tooShort,\r\n    patternMismatch,\r\n  } = this.validity;\r\n\r\n  if (valid) {\r\n    displaySuccess(this);\r\n  } else {\r\n    if (valueMissing) {\r\n      displayError(this, 'This field is required');\r\n    }\r\n    if (typeMismatch) {\r\n      displayError(this, 'Please enter a valid e-mail');\r\n    }\r\n    if (tooShort) {\r\n      displayError(\r\n        this,\r\n        `${this.name} should be at least ${this.minLength} chars long`\r\n      );\r\n    }\r\n    if (patternMismatch) {\r\n      displayError(this, `${this.name} should contain at least ${this.title}`);\r\n    }\r\n  }\r\n}\r\n\r\nsignupInputs.forEach(input => {\r\n  input.addEventListener('invalid', validateInput);\r\n  input.addEventListener('blur', validateInput);\r\n});\r\n"]}