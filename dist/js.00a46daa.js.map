{"version":3,"sources":["js/index.js"],"names":["lengthEl","document","querySelector","options","querySelectorAll","generateBtn","passwordEl","labelEl","passwordForm","generateRandomSymbol","type","String","fromCharCode","Math","floor","random","symbols","length","getRandomType","types","generatePassword","value","password","forEach","option","checked","push","name","i","addEventListener"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAjB;AACA,IAAMC,OAAO,GAAGF,QAAQ,CAACG,gBAAT,CAA0B,sBAA1B,CAAhB;AACA,IAAMC,WAAW,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAApB;AACA,IAAMI,UAAU,GAAGL,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAnB;AACA,IAAMK,OAAO,GAAGN,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB;AACA,IAAMM,YAAY,GAAGP,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAArB;;AAEA,SAASO,oBAAT,CAA8BC,IAA9B,EAAoC;AAClC,UAAQA,IAAR;AACE,SAAK,WAAL;AACE,aAAOC,MAAM,CAACC,YAAP,CAAoBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAArD,CAAP;;AAEF,SAAK,WAAL;AACE,aAAOJ,MAAM,CAACC,YAAP,CAAoBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAArD,CAAP;;AAEF,SAAK,QAAL;AACE,aAAOJ,MAAM,CAACC,YAAP,CAAoBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAArD,CAAP;;AAEF,SAAK,QAAL;AAAe;AACb,YAAMC,OAAO,mCAAb;AACA,eAAOA,OAAO,CAACH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,OAAO,CAACC,MAAnC,CAAD,CAAd;AACD;;AAED;AACE,aAAO,EAAP;AAhBJ;AAkBD;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,CAACN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBI,KAAK,CAACF,MAAjC,CAAD,CAAZ;AACD;;AAED,SAASG,gBAAT,GAA4B;AAC1B,MAAMH,MAAM,GAAGjB,QAAQ,CAACqB,KAAxB;AACA,MAAMF,KAAK,GAAG,EAAd;AACA,MAAIG,QAAQ,GAAG,EAAf;AAEAnB,EAAAA,OAAO,CAACoB,OAAR,CAAgB,UAAAC,MAAM;AAAA,WAAKA,MAAM,CAACC,OAAP,GAAiBN,KAAK,CAACO,IAAN,CAAWF,MAAM,CAACG,IAAlB,CAAjB,GAA2C,IAAhD;AAAA,GAAtB;;AAEA,MAAI,CAACR,KAAK,CAACF,MAAX,EAAmB;AACjB;AACD;;AAED,OAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,MAApB,EAA4BW,CAAC,EAA7B,EAAiC;AAC/BN,IAAAA,QAAQ,IAAIb,oBAAoB,CAACS,aAAa,CAACC,KAAD,CAAd,CAAhC;AACD;;AAEDb,EAAAA,UAAU,CAACe,KAAX,GAAmBC,QAAnB;AACD;;AAEDjB,WAAW,CAACwB,gBAAZ,CAA6B,OAA7B,EAAsCT,gBAAtC","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["const lengthEl = document.querySelector('#length');\r\nconst options = document.querySelectorAll('.generator__checkbox');\r\nconst generateBtn = document.querySelector('#generate');\r\nconst passwordEl = document.querySelector('#password');\r\nconst labelEl = document.querySelector('#label');\r\nconst passwordForm = document.querySelector('#form');\r\n\r\nfunction generateRandomSymbol(type) {\r\n  switch (type) {\r\n    case 'lowercase':\r\n      return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\r\n\r\n    case 'uppercase':\r\n      return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n\r\n    case 'number':\r\n      return String.fromCharCode(Math.floor(Math.random() * 10) + 48);\r\n\r\n    case 'symbol': {\r\n      const symbols = `~!@#$%^&*()_+={}[]|:;\"'<,>.?/`;\r\n      return symbols[Math.floor(Math.random() * symbols.length)];\r\n    }\r\n\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nfunction getRandomType(types) {\r\n  return types[Math.floor(Math.random() * types.length)];\r\n}\r\n\r\nfunction generatePassword() {\r\n  const length = lengthEl.value;\r\n  const types = [];\r\n  let password = '';\r\n\r\n  options.forEach(option => (option.checked ? types.push(option.name) : null));\r\n\r\n  if (!types.length) {\r\n    return;\r\n  }\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    password += generateRandomSymbol(getRandomType(types));\r\n  }\r\n\r\n  passwordEl.value = password;\r\n}\r\n\r\ngenerateBtn.addEventListener('click', generatePassword);\r\n"]}